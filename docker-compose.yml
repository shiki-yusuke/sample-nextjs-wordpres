version: "3.7"
services:
  db:
    image: mysql:5.7
    platform: linux/amd64 # M1Macを使う場合
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password # rootユーザのパスワード
      MYSQL_DATABASE: db_local # WordPress用データベース名
      MYSQL_USER: wp_user # WordPress用データベース接続ユーザ名
      MYSQL_PASSWORD: password # WordPress用データベース接続パスワード
    volumes:
      - db_data:/var/lib/mysql

  WordPress:
    depends_on:
      - db
    image: wordpress:latest
    container_name: wordpress
    ports:
      - 8000:80
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306 # データベースサーバ名：ポート番号
      WORDPRESS_DB_USER: wp_user # WordPress用データベース接続ユーザ名(dbの内容に合わせる)
      WORDPRESS_DB_PASSWORD: password # WordPress用データベース接続パスワード(dbの内容に合わせる)
      WORDPRESS_DB_NAME: db_local # WordPress用データベース名(dbの内容に合わせる)
      WORDPRESS_DEBUG: 1 # デバッグモードON
    volumes:
      - ./wp-content:/var/www/html/wp-content/

  app:
    build:
      context: . # contextはdocker buildを実行する時のワーキングディレクトリ
      dockerfile: Dockerfile # dockerfileはDockerfileのパスを指定

    # ホスト側のディレクトリ./srcを、コンテナのディレクトリ/appにマウント
    volumes:
      - .:/app # 現在のディレクトリとコンテナ内の/app/ディレクトリが同期
      - node_modules:/app/node_modules

    # ホットリロード
    environment:
      - WATCHPACK_POLLING=true

    # ホスト側のポート：コンテナ側のポート
    ports:
      - "3000:3000"

    # コンテナを起動したままにするために設定
    tty: true

volumes:
  node_modules:
  db_data:
